<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">

    <!-- COLORS FOR GUI -->
    <SolidColorBrush x:Key="GUIColor-Default" Color="#2ca3dd" />
    <SolidColorBrush x:Key="GUIColor-MouseOver" Color="#FF6ACFF5" />
    <SolidColorBrush x:Key="GUIColor-MousePressed" Color="#197ad5" />
    <SolidColorBrush x:Key="GUIColor-EnabledFalse" Color="#FFB2B2B2" />
    <SolidColorBrush x:Key="GUIColor-ShadowGrey" Color="#FF878787" />
    <SolidColorBrush x:Key="GUIColor-BackgroundHighlight" Color="#FF494949" />
    <SolidColorBrush x:Key="GUIColor-Background" Color="#FF3c3c3b" />
	<!-- TIMINGS -->
	<KeyTime x:Key="DefaultUITiming">0:0:0.1</KeyTime>

    <!-- Normal button -->
    <Style x:Key="MyButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="Rectangle" Fill="{DynamicResource GUIColor-Default}"/>
                        <Rectangle x:Name="Rectangle_Click" Fill="{DynamicResource GUIColor-MousePressed}" Opacity="0"/>
                        <Border x:Name="MyBorder" BorderBrush="White" BorderThickness="2" Opacity="0" />
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="8"/>
                    </Grid>
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Border_Appear">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MyBorder">
                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="{StaticResource DefaultUITiming}" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Border_Disappear">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MyBorder">
                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="{StaticResource DefaultUITiming}" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Button_Pressed">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Rectangle_Click">
                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="{StaticResource DefaultUITiming}" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Button_Unpressed">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Rectangle_Click">
                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="{StaticResource DefaultUITiming}" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
							<Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Border_Appear}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard  Storyboard="{StaticResource Border_Disappear}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter Property="Opacity" TargetName="Rectangle_Click" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Border_Appear}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard  Storyboard="{StaticResource Border_Disappear}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Button_Pressed}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Button_Unpressed}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="Rectangle" Value="{StaticResource GUIColor-EnabledFalse}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="Segoe UI Light"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="Normal"/>
    </Style>

    <!--Checkbox avec texte au-dessus -->
    <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <!-- resources -->
                    <ControlTemplate.Resources>

                        <Storyboard x:Key="Border_Appear">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MyBorder">
                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="{StaticResource DefaultUITiming}" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Border_Disappear">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MyBorder">
                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="{StaticResource DefaultUITiming}" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Mark_Appear">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckMark">
                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="{StaticResource DefaultUITiming}" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Mark_Disappear">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckMark">
                                <EasingDoubleKeyFrame KeyTime="{StaticResource DefaultUITiming}" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <!-- template -->
                        <DockPanel HorizontalAlignment="Center" VerticalAlignment="Center" Width="Auto" LastChildFill="True">
                            <Grid DockPanel.Dock="Top" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Rectangle Width="20" Height="20" Fill="White"/>
                                <Border x:Name="MyBorder" BorderBrush="{DynamicResource GUIColor-Default}" BorderThickness="2" Opacity="0" />
                                <Viewbox x:Name="CheckMark" Width="20" Height="20" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Canvas HorizontalAlignment="Center" VerticalAlignment="Center" Height="45.752" Width="62.599">
                                        <Path
                                            Data="F1M25.7067,29.976L8.8607,13.13L-0.000299999999999301,21.99L25.9667,47.957L25.9667,47.956L62.5987,11.325L53.4767,2.205z"
                                            Fill="{DynamicResource GUIColor-Default}" Height="45.752" Stretch="Fill" Width="62.599"/>
                                    </Canvas>
                                </Viewbox>
                            </Grid>
							<ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </DockPanel>
                   <!-- triggers -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="Border_Appear_BeginStoryboard_Focus" Storyboard="{StaticResource Border_Appear}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard  x:Name="Border_Disappear_BeginStoryboard_Focus" Storyboard="{StaticResource Border_Disappear}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="Mark_Appear_BeginStoryboard" Storyboard="{StaticResource Mark_Appear}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="Mark_Disappear_BeginStoryboard" Storyboard="{StaticResource Mark_Disappear}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter Property="Opacity" TargetName="CheckMark" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="Border_Disappear_BeginStoryboard" Storyboard="{StaticResource Border_Disappear}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="Border_Appear_BeginStoryboard" Storyboard="{StaticResource Border_Appear}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource GUIColor-MousePressed}" TargetName="MyBorder"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource GUIColor-EnabledFalse}" TargetName="MyBorder"/>
                            <Setter Property="Opacity" Value="1" TargetName="MyBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource GUIColor-ShadowGrey}" TargetName="MyBorder"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>